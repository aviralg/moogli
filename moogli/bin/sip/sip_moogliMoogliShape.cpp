/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.9
 */

#include "sipAPI_moogli.h"

#line 236 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/moogli.sip"
#include "shapes/Shape.hpp"
#line 12 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/sip_moogliMoogliShape.cpp"

#line 156 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/moogli.sip"
#include <osg/Vec4f>
using osg::Vec4f;
#line 17 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/sip_moogliMoogliShape.cpp"


extern "C" {static PyObject *meth_MoogliShape_id(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_id(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            PyObject * sipRes = 0;

#line 245 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/moogli.sip"
        sipRes = PyString_FromString(sipCpp -> id().c_str());
#line 34 "/home1/dilawars/Work/GITHUB/BhallaLab/moogli/moogli/bin/sip/sip_moogliMoogliShape.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_id, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_hide(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_hide(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->hide();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_hide, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_show(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_show(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->show();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_show, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_visible(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_visible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->visible();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_visible, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_export_geometry(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_export_geometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const char* a0;
        bool a1 = 0;
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bs|b", &sipSelf, sipType_MoogliShape, &sipCpp, &a0, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->export_geometry(a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_export_geometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_enable_effects(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_enable_effects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->enable_effects();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_enable_effects, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_disable_effects(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_disable_effects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->disable_effects();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_disable_effects, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_toggle_effects(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_toggle_effects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->toggle_effects();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_toggle_effects, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_enable_outline_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_enable_outline_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->enable_outline_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_enable_outline_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_disable_outline_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_disable_outline_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->disable_outline_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_disable_outline_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_toggle_outline_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_toggle_outline_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->toggle_outline_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_toggle_outline_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_outline_effect_enabled(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_outline_effect_enabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->outline_effect_enabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_outline_effect_enabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_outline_effect_line_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_outline_effect_line_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_MoogliShape, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_outline_effect_line_width(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_outline_effect_line_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_outline_effect_line_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_outline_effect_line_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            float sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->get_outline_effect_line_width();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_outline_effect_line_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_outline_effect_line_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_outline_effect_line_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const Vec4f* a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_MoogliShape, &sipCpp, sipType_Vec4f, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_outline_effect_line_color(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_outline_effect_line_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_outline_effect_line_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_outline_effect_line_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Vec4f*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Vec4f(sipCpp->get_outline_effect_line_color());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Vec4f,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_outline_effect_line_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_enable_cartoon_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_enable_cartoon_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->enable_cartoon_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_enable_cartoon_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_disable_cartoon_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_disable_cartoon_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->disable_cartoon_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_disable_cartoon_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_toggle_cartoon_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_toggle_cartoon_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->toggle_cartoon_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_toggle_cartoon_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_cartoon_effect_enabled(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_cartoon_effect_enabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->cartoon_effect_enabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_cartoon_effect_enabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_cartoon_effect_outline_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_cartoon_effect_outline_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_MoogliShape, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_cartoon_effect_outline_width(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_cartoon_effect_outline_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_cartoon_effect_outline_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_cartoon_effect_outline_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            float sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->get_cartoon_effect_outline_width();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_cartoon_effect_outline_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_cartoon_effect_outline_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_cartoon_effect_outline_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const Vec4f* a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_MoogliShape, &sipCpp, sipType_Vec4f, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_cartoon_effect_outline_color(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_cartoon_effect_outline_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_cartoon_effect_outline_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_cartoon_effect_outline_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Vec4f*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Vec4f(sipCpp->get_cartoon_effect_outline_color());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Vec4f,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_cartoon_effect_outline_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_enable_wireframe_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_enable_wireframe_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->enable_wireframe_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_enable_wireframe_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_disable_wireframe_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_disable_wireframe_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->disable_wireframe_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_disable_wireframe_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_toggle_wireframe_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_toggle_wireframe_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->toggle_wireframe_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_toggle_wireframe_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_wireframe_effect_enabled(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_wireframe_effect_enabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->wireframe_effect_enabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_wireframe_effect_enabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_wireframe_effect_line_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_wireframe_effect_line_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_MoogliShape, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_wireframe_effect_line_width(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_wireframe_effect_line_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_wireframe_effect_line_width(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_wireframe_effect_line_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            float sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->get_wireframe_effect_line_width();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_wireframe_effect_line_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_wireframe_effect_line_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_wireframe_effect_line_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const Vec4f* a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_MoogliShape, &sipCpp, sipType_Vec4f, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_wireframe_effect_line_color(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_wireframe_effect_line_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_wireframe_effect_line_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_wireframe_effect_line_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Vec4f*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Vec4f(sipCpp->get_wireframe_effect_line_color());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Vec4f,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_wireframe_effect_line_color, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_enable_specular_highlights_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_enable_specular_highlights_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->enable_specular_highlights_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_enable_specular_highlights_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_disable_specular_highlights_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_disable_specular_highlights_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->disable_specular_highlights_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_disable_specular_highlights_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_toggle_specular_highlights_effect(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_toggle_specular_highlights_effect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->toggle_specular_highlights_effect();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_toggle_specular_highlights_effect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_specular_highlights_effect_enabled(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_specular_highlights_effect_enabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->specular_highlights_effect_enabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_specular_highlights_effect_enabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_set_specular_highlights_effect_exponent(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_set_specular_highlights_effect_exponent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_MoogliShape, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->set_specular_highlights_effect_exponent(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_set_specular_highlights_effect_exponent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_specular_highlights_effect_exponent(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_specular_highlights_effect_exponent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            float sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->get_specular_highlights_effect_exponent();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_specular_highlights_effect_exponent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_MoogliShape_get_specular_highlights_effect_color(PyObject *, PyObject *);}
static PyObject *meth_MoogliShape_get_specular_highlights_effect_color(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const Vec4f* a0;
        MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_MoogliShape, &sipCpp, sipType_Vec4f, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->get_specular_highlights_effect_color(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const MoogliShape *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_MoogliShape, &sipCpp))
        {
            Vec4f*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Vec4f(sipCpp->get_specular_highlights_effect_color());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Vec4f,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_MoogliShape, sipName_get_specular_highlights_effect_color, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_MoogliShape(void *, const sipTypeDef *);}
static void *cast_MoogliShape(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_MoogliShape)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_MoogliShape(void *, int);}
static void release_MoogliShape(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<MoogliShape *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_MoogliShape(sipSimpleWrapper *);}
static void dealloc_MoogliShape(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_MoogliShape(sipGetAddress(sipSelf),0);
    }
}


static PyMethodDef methods_MoogliShape[] = {
    {SIP_MLNAME_CAST(sipName_cartoon_effect_enabled), meth_MoogliShape_cartoon_effect_enabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disable_cartoon_effect), meth_MoogliShape_disable_cartoon_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disable_effects), meth_MoogliShape_disable_effects, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disable_outline_effect), meth_MoogliShape_disable_outline_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disable_specular_highlights_effect), meth_MoogliShape_disable_specular_highlights_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disable_wireframe_effect), meth_MoogliShape_disable_wireframe_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_enable_cartoon_effect), meth_MoogliShape_enable_cartoon_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_enable_effects), meth_MoogliShape_enable_effects, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_enable_outline_effect), meth_MoogliShape_enable_outline_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_enable_specular_highlights_effect), meth_MoogliShape_enable_specular_highlights_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_enable_wireframe_effect), meth_MoogliShape_enable_wireframe_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_export_geometry), meth_MoogliShape_export_geometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_cartoon_effect_outline_color), meth_MoogliShape_get_cartoon_effect_outline_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_cartoon_effect_outline_width), meth_MoogliShape_get_cartoon_effect_outline_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_outline_effect_line_color), meth_MoogliShape_get_outline_effect_line_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_outline_effect_line_width), meth_MoogliShape_get_outline_effect_line_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_specular_highlights_effect_color), meth_MoogliShape_get_specular_highlights_effect_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_specular_highlights_effect_exponent), meth_MoogliShape_get_specular_highlights_effect_exponent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_wireframe_effect_line_color), meth_MoogliShape_get_wireframe_effect_line_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_get_wireframe_effect_line_width), meth_MoogliShape_get_wireframe_effect_line_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hide), meth_MoogliShape_hide, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_id), meth_MoogliShape_id, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_outline_effect_enabled), meth_MoogliShape_outline_effect_enabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_cartoon_effect_outline_color), meth_MoogliShape_set_cartoon_effect_outline_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_cartoon_effect_outline_width), meth_MoogliShape_set_cartoon_effect_outline_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_outline_effect_line_color), meth_MoogliShape_set_outline_effect_line_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_outline_effect_line_width), meth_MoogliShape_set_outline_effect_line_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_specular_highlights_effect_exponent), meth_MoogliShape_set_specular_highlights_effect_exponent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_wireframe_effect_line_color), meth_MoogliShape_set_wireframe_effect_line_color, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_set_wireframe_effect_line_width), meth_MoogliShape_set_wireframe_effect_line_width, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_show), meth_MoogliShape_show, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_specular_highlights_effect_enabled), meth_MoogliShape_specular_highlights_effect_enabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toggle_cartoon_effect), meth_MoogliShape_toggle_cartoon_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toggle_effects), meth_MoogliShape_toggle_effects, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toggle_outline_effect), meth_MoogliShape_toggle_outline_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toggle_specular_highlights_effect), meth_MoogliShape_toggle_specular_highlights_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toggle_wireframe_effect), meth_MoogliShape_toggle_wireframe_effect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_visible), meth_MoogliShape_visible, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_wireframe_effect_enabled), meth_MoogliShape_wireframe_effect_enabled, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef__moogli_MoogliShape = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
        sipNameNr_MoogliShape,
        {0}
    },
    {
        sipNameNr_MoogliShape,
        {0, 0, 1},
        39, methods_MoogliShape,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_MoogliShape,
    0,
    0,
    0,
    release_MoogliShape,
    cast_MoogliShape,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
