#! /usr/bin/env python

import moogli
import moogli.simulator
import moogli.parser
print(moogli.parser.__path__)
import moose
from moose import neuroml
import sys
import os
import PyQt4
from PyQt4 import *
# import argparse

# parser = argparse.ArgumentParser(description='View Neuronal Models.')
# parser.add_argument( '--background-color'
#                    , metavar    = 'bc'
#                    , type       = tuple
#                    , default    = (0.0, 0.0, 0.0, 1.0)
#                    , help='change background color of model'
#                    )
# parser.add_argument('--sum', dest='accumulate', action='store_const',
#                    const=sum, default=max,
#                    help='sum the integers (default: find the max)')

# args = parser.parse_args()
# print args
# print args.accumulate(args.integers)



# app = QtGui.QApplication(sys.argv)

if len(sys.argv[1:]) == 0:
    exit(0)

viewers = []
application = PyQt4.QtGui.QApplication([])
for index, filename in enumerate(sys.argv[1:]):
    if filename.endswith("xml"):
        moose.neuroml.loadNeuroML_L123(filename, "/" + str(index))
        viewer = moogli.simulator.moose.create_viewer( moose.element("/" + str(index))
                                                     , moose
                                                     )
    elif filename.endswith("swc"):
        network = moogli.parser.swc.parse(filename)
        viewer  = moogli.NetworkViewer(network)
    elif filename.endswith("csv"):
        network = moogli.parser.csv.parse(filename)
        viewer  = moogli.NetworkViewer(network)
    viewer.show()
    viewer.set_background_color((0.0, 0.0, 0.0, 1.0))
    viewers.append(viewer)


def delete_widgets():
    while len(viewers) > 0:
        viewer = viewers.pop()
        viewer.setParent(None)
        del viewer

PyQt4.QtGui.QApplication.instance().aboutToQuit.connect( delete_widgets )


application.exec_()
